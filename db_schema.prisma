generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                String    @id @default(cuid())
  name              String?
  email             String?   @unique
  emailVerified     DateTime?
  image             String?
  createdAt         DateTime  @default(now())
  kindeId           String?   @unique
  role              UserRole  @default(USER)
  updatedAt         DateTime  @updatedAt
  paymentPreference String    @default("CARD")
  accounts          Account[]
  sessions          Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Event {
  id           String         @id @default(cuid())
  price        Float
  from         DateTime
  to           DateTime
  created_at   DateTime
  description  String?
  title        String
  visible      Boolean        @default(true)
  place        String?
  capacity     Int            @default(0)
  Registration Registration[]
}

/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model Registration {
  id           String   @id @default(cuid())
  event_id     String
  first_name   String
  last_name    String?
  email        String
  phone_number String?
  payment_type String
  created_at   DateTime
  attended     Boolean  @default(false)
  payment      Payment?
  event        Event    @relation(fields: [event_id], references: [id])
}

model WaitingList {
  id           String   @id @default(cuid())
  event_id     String
  first_name   String
  last_name    String?
  email        String
  phone_number String?
  payment_type String
  created_at   DateTime
}

model Payment {
  id              String       @id @default(cuid())
  registration_id String       @unique
  variable_symbol String
  qr_data         String
  paid            Boolean
  created_at      DateTime
  registration    Registration @relation(fields: [registration_id], references: [id], onDelete: Cascade)
}

enum UserRole {
  USER
  MODERATOR
  ADMIN
}


